// English translations for GuruShots Auto Vote
/* global window, self */
(function (root, factory) {
    if (typeof module === 'object' && module.exports) {
        // Node.js
        module.exports = factory();
    } else {
        // Browser globals
        root.englishTranslations = factory();
    }
}(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : this, function () {
    return {
    // Common/shared translations
        common: {
            dark: 'Dark',
            global: 'Global:',
            languageEnglish: 'English',
            languageLatvian: 'Latviešu',
            light: 'Light',
            loading: 'Loading...',
            logout: 'Logout',
            mock: 'Mock:',
            never: 'Never',
            no: 'No',
            off: 'OFF',
            on: 'ON',
            refresh: 'Refresh',
            running: 'Running',
            status: 'Status:',
            stay: 'Stay:',
            stopped: 'Stopped',
            theme: 'Theme',
            title: 'GuruShots Auto Vote',
            yes: 'Yes',
            ok: 'OK',
        },
        // Menu translations
        menu: {
            edit: 'Edit',
            undo: 'Undo',
            redo: 'Redo',
            cut: 'Cut',
            copy: 'Copy',
            paste: 'Paste',
            selectAll: 'Select All',
            file: 'File',
            view: 'View',
            window: 'Window',
            help: 'Help',
            reload: 'Reload',
            toggleDevTools: 'Toggle Developer Tools',
            toggleFullscreen: 'Toggle Fullscreen',
            minimize: 'Minimize',
            zoom: 'Zoom',
            close: 'Close',
            bringAllToFront: 'Bring All to Front',
            logs: 'Logs',
            about: 'About GuruShots Auto Vote',
            aboutTitle: 'About GuruShots Auto Vote',
            aboutAuthor: 'Author',
            aboutElectron: 'Electron',
            aboutNode: 'Node.js',
            aboutDescription: 'GuruShots Auto Vote - An Electron application for automated voting on GuruShots challenges with unified GUI and CLI interfaces (supports both real and mock modes)',
        },
        // Login screen specific
        login: {
            heading: 'Login',
            loadingModeInfo: 'Loading mode information...',
            loggingIn: 'Logging in...',
            loginButton: 'Login',
            mockMode: 'Mock mode',
            mockModeInfo: 'Mock mode: Using simulated data for testing. Any credentials will work.',
            password: 'Password',
            passwordPlaceholder: 'Enter your password',
            passwordRequired: 'Password is required',
            productionModeInfo: 'Production mode: Using real GuruShots API. Valid credentials required.',
            stayLoggedIn: 'Stay logged in',
            title: 'Login - GuruShots Auto Vote',
            username: 'Username',
            usernamePlaceholder: 'Enter your username',
            usernameRequired: 'Username is required',
        },
        // App screen specific
        app: {
            activeChallenges: 'Active Challenges',
            addCustomTimezone: 'Add custom timezone',
            addTimezone: 'Add custom timezone',
            apiTimeout: 'API Timeout',
            apiTimeoutDesc: 'Timeout for API requests in seconds (1-120)',
            appSetting: 'App Setting',
            applicationSettings: 'Application Settings',
            autoVote: 'Auto Vote',
            available: 'Available',
            used: 'Used',
            unavailable: 'Unavailable',
            boost: 'Boost',
            boostTime: 'Boost Time',
            boostTimeDesc: 'When to automatically apply boost (time remaining)',
            turbo: 'Turbo',
            cancel: 'Cancel',
            challengeDefaults: 'Challenge Defaults',
            challengeName: 'Challenge',
            challengeOverrides: 'Challenge Overrides',
            challengeSettings: 'Challenge Settings',
            challengeSettingsDesc: 'Configure settings specific to this challenge. Overrides will take precedence over global defaults.',
            checkForUpdates: 'Check for Updates',
            checkForUpdatesDesc: 'Manually check for new versions of the application',
            configureBoost: 'Configure Boost for',
            currentVersion: 'Current version',
            cycles: 'Cycles:',
            downloadUpdate: 'Download Update',
            ends: 'Ends',
            english: 'English',
            entries: 'Entries',
            entryDetails: 'Entry Details',
            error: 'Error',
            errorCheckingUpdates: 'Error checking for updates',
            errorLoadingUiSettings: 'Error loading UI settings',
            exposure: 'Exposure',
            exposureDesc: 'Exposure percentage threshold for actions',
            fast: 'FAST',
            global: 'Global',
            globalDefault: 'Global Default',
            globalSettings: 'Global Settings',
            hours: 'hours',
            language: 'Language',
            languageDesc: 'Select your preferred language',
            lastMinuteThreshold: 'Last Minute Threshold',
            lastMinuteThresholdDesc: 'Threshold in minutes for last-minute actions',
            lastRun: 'Last Run:',
            latestVersion: 'Latest version',
            latvian: 'Latviešu',
            local: 'Local',
            minutes: 'minutes',
            missingConfigFor: 'Missing config for',
            next: 'Next',
            noComm: 'No comm',
            noEntries: 'No entries',
            noGlobalSettingsToDisplay: 'No global settings to display',
            noOverrides: 'No challenge-specific overrides configured',
            noUiSettingsToDisplay: 'No UI settings to display',
            noUpdatesAvailable: 'No updates available',
            normal: 'NORMAL',
            of: 'of',
            onePhoto: '1 photo',
            onlyBoost: 'Only Boost Mode',
            onlyBoostDesc: 'Only perform boost actions, skip regular voting',
            override: 'Override',
            overrideForChallenge: 'Override for Challenge',
            photo: 'photo',
            photos: 'photos',
            players: 'Players',
            pleaseLogin: 'Please log in to view challenges',
            prerelease: 'Pre-release',
            prize: 'Prize',
            rank: 'Rank',
            rememberLoginSession: 'Remember login session',
            remindMeLater: 'Remind Me Later',
            removeCurrentTimezone: 'Remove current timezone',
            resetToGlobal: 'Reset to Global',
            resetToDefault: 'Reset to default',
            resetToDefaultNotSaved: 'Reset to default (not saved until Save)',
            resetAll: 'Reset All',
            resetAllConfirmTitle: 'Reset All Settings',
            resetAllConfirmMessage: 'Are you sure you want to reset ALL settings to their default values?',
            resetAllConfirmDetails: 'This will reset:\\n• All UI settings (theme, language, timezone)\\n• All global challenge defaults\\n• Application preferences\\n• Window positions and sizes\\n• Custom timezones\\n• Username and login session preferences\\n\\nOnly your login token, last update check time, mock mode setting, and API headers will be preserved.\\n\\nThis action cannot be undone.',
            resetAllSuccess: 'All settings have been reset to their default values. The page will reload to apply changes.',
            save: 'Save',
            seconds: 'seconds',
            settings: 'Settings',
            skipThisVersion: 'Skip This Version',
            speed: 'Speed',
            startAutoVote: 'Start Auto Vote',
            stayLoggedIn: 'Stay Logged In',
            stayLoggedInDesc: 'Keep login session after closing the app',
            stopAutoVote: 'Stop Auto Vote',
            theme: 'Theme',
            themeDesc: 'Choose between light and dark theme',
            time: 'Time',
            timezone: 'Timezone',
            timezoneDesc: 'Select your timezone for displaying challenge times',
            timezonePlaceholder: 'Enter timezone',
            uiSetting: 'UI Setting',
            updateAvailable: 'Update available!',
            vote: 'Vote',
            voteToNextLevel: 'vote to next level',
            voted: 'Voted!',
            votes: 'Votes',
            votesNeeded: 'votes needed',
            voting: 'Voting...',
            checkFrequency: 'Check Frequency',
            checkFrequencyDesc: 'Frequency of API checks for voting opportunities in minutes (1-60)',
            voteOnlyInLastMinute: 'Vote Only in Last Minute',
            voteOnlyInLastMinuteDesc: 'Only auto-vote when within the last minute threshold, skip voting otherwise',
            lastMinuteCheckFrequency: 'Last Minute Check Frequency',
            lastMinuteCheckFrequencyDesc: 'Check frequency in minutes when within last minute threshold (0-60, 0 = disabled)',
            lastHourExposure: 'Last Hour Exposure',
            lastHourExposureDesc: 'Exposure threshold for actions within the last hour of challenge (0-100)',
            useLastHourExposure: 'Use Last Hour Exposure',
            useLastHourExposureDesc: 'Enable special exposure logic for the last hour of challenge',
            validationInvalidValue: 'Invalid value',
            validationMustBeLessOrEqual: 'Must be ≤ {0} (currently {1})',
            whatsNew: 'What\'s New:',
            yourEntries: 'Your Entries',
            yourProgress: 'Your Progress',
        },
        // Logs page specific
        logs: {
            title: 'Logs',
            status: 'Status',
            waiting: 'Waiting for log messages...',
            connected: 'Connected',
            disconnected: 'Disconnected',
        },
    };
}));